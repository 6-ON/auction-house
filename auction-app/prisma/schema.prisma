// -------------------- Config ------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ------------------------ Models-------------------
model Auction {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  initialPrice Float
  tags         String[]
  user         User            @relation(fields: [userId], references: [id])
  userId       String          @db.ObjectId
  bids         Bid[]
  startDate    DateTime
  endDate      DateTime
  category     Category        @relation(fields: [categoryId], references: [id])
  categoryId   String          @db.ObjectId
  objects      AuctionObject[]
  messages     Message[]
}

model AuctionObject {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description String
  auction     Auction       @relation(fields: [auctionId], references: [id])
  auctionId   String        @db.ObjectId
  image      String
}

model Bid {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  amount    Float
  user      User    @relation(fields: [userId], references: [id])
  action    Auction @relation(fields: [auctionId], references: [id])
  userId    String  @db.ObjectId
  auctionId String  @db.ObjectId
  createdAt DateTime @default(now())
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  auctions Auction[]
}

model Message {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  sender   User   @relation(fields: [senderId], references: [id])
  senderId String @map("senderId") @db.ObjectId
  content  String
  auction  Auction @relation(fields: [auctionId], references: [id])
  auctionId String @db.ObjectId
  createdAt DateTime @default(now())
}

model Report {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  reported   User   @relation("reports",fields: [reportedId], references: [id])
  reportedId String @map("reportedId") @db.ObjectId
  reporter   User   @relation("reporting",fields: [reporterId], references: [id])
  reporterId String @map("reporterId") @db.ObjectId
  reason     String
}

// model ObjectImage {
//   id              String        @id @default(auto()) @map("_id") @db.ObjectId
//   url             String
//   auctionObject   AuctionObject @relation(fields: [auctionObjectId], references: [id])
//   auctionObjectId String        @db.ObjectId
// }

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  username String
  fullName String
  password String
  isAdmin Boolean   @default(false)
  isBanned Boolean @default(false)
  auctions Auction[]
  bids     Bid[]
  messages Message[]
  reportings Report[] @relation("reporting")
  reports Report[] @relation("reports")
}
